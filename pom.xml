<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<name>Vireo</name>
	<description>Vireo Thesis and Dissertation Submission System</description>
	<version>4.0.x-SNAPSHOT</version>
	<groupId>org.tdl</groupId>
	<artifactId>vireo</artifactId>
	<url>https://github.com/TexasDigitalLibrary/Vireo</url>
	<organization>
		<name>TDL</name>
		<url>http://www.tdl.org</url>
	</organization>

	<parent>
		<groupId>edu.tamu.weaverframework</groupId>
		<artifactId>weaver-webservice-parent</artifactId>
		<version>1.1.0-RC3-SNAPSHOT</version>
	</parent>

	<properties>
		<start-class>org.tdl.vireo.Application</start-class>
		<m2eclipse.wtp.contextRoot>/</m2eclipse.wtp.contextRoot>
		<tomcat.version>7.0.59</tomcat.version>
		<java.version>1.8</java.version>
		<postgresql.version>9.4-1202-jdbc42</postgresql.version>
	</properties>

	<packaging>war</packaging>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<formats>
						<format>html</format>
					</formats>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>cobertura</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<repositories>
		<repository>
			<id>tamu-releases</id>
			<url>https://maven.library.tamu.edu/content/repositories/releases</url>
		</repository>
		<repository>
			<id>tamu-snapshots</id>
			<url>https://maven.library.tamu.edu/content/repositories/snapshots</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>edu.tamu.weaverframework</groupId>
			<artifactId>weaver-webservice-core</artifactId>
			<version>1.1.0-RC3-SNAPSHOT</version>
		</dependency>

		<!-- Spring standalone JDK tools for JSP runtime compile (to avoid Embedded 
			Jetty error on JSP compile at runtime) -->
		<dependency>
			<groupId>com.sun</groupId>
			<artifactId>tools</artifactId>
			<version>${java.version}</version>
			<systemPath>${java.home}/../lib/tools.jar</systemPath>
			<scope>system</scope>
		</dependency>
		<!-- Spring Boot Starter Web <dependency> <groupId>org.springframework.boot</groupId> 
			<artifactId>spring-boot-starter-web</artifactId> </dependency> -->
		<!-- Spring Boot Starter Data - brought in through the tamu core framework 
			<dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-data-jpa</artifactId> 
			</dependency> JPA -->
		<!-- Spring Boot Data REST <dependency> <groupId>org.springframework.boot</groupId> 
			<artifactId>spring-boot-starter-data-rest</artifactId> </dependency> -->
		<!-- H2 in-memory SQL DB - brought in through the tamu core framework <dependency> 
			<groupId>com.h2database</groupId> <artifactId>h2</artifactId> </dependency> -->
		<!-- PostgreSQL SQL DB - brought in through the tamu core framework <dependency> 
			<groupId>org.postgresql</groupId> <artifactId>postgresql</artifactId> <version>${postgresql.version}</version> 
			</dependency> -->
		<!-- MySQL SQL DB -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<!-- Spring Boot Loader Tools (for FileUtils.sha1Hash()) -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-loader-tools</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- <dependency> <groupId>org.codehaus.mojo</groupId> <artifactId>properties-maven-plugin</artifactId> 
			<version>1.0.0</version> </dependency> -->

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.8</version>
		</dependency>

		<dependency>
			<groupId>org.neo4j</groupId>
			<artifactId>neo4j-cypher-compiler-2.1</artifactId>
			<version>2.1.8</version>
		</dependency>
	</dependencies>


	<build>

		<plugins>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<addResources>false</addResources>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<delimiters>
						<delimiter>@</delimiter>
					</delimiters>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<useSystemClassLoader>false</useSystemClassLoader>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.shared</groupId>
						<artifactId>maven-filtering</artifactId>
						<version>1.3</version>
					</dependency>
				</dependencies>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
					<webResources>
						<webResource>
							<resource>
								<filtering>true</filtering>
								<directory>src/main/resources</directory>
								<targetPath>WEB-INF</targetPath>
								<includes>
									<include>application.properties</include>
								</includes>
								<excludes>
									<exclude>**/*.xls</exclude>
								</excludes>
							</resource>
						</webResource>
						<webResource>
							<filtering>false</filtering>
							<directory>src/main/resources</directory>
							<targetPath>WEB-INF/classes</targetPath>
							<includes>
								<include>*/**</include>
							</includes>
							<exclude>application.properties</exclude>
						</webResource>
					</webResources>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.shared</groupId>
						<artifactId>maven-filtering</artifactId>
						<version>1.3</version>
					</dependency>
				</dependencies>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
					<archiveClasses>true</archiveClasses>
					<webResources>
						<webResource>
							<filtering>true</filtering>
							<directory>src/main/resources</directory>
							<targetPath>WEB-INF</targetPath>
							<includes>
								<include>application.properties</include>
							</includes>
							<excludes>
								<exclude>**/*.xls</exclude>
							</excludes>
						</webResource>
						<webResource>
							<filtering>false</filtering>
							<directory>src/main/resources</directory>
							<targetPath>WEB-INF/classes</targetPath>
							<includes>
								<include>*/**</include>
							</includes>
							<exclude>application.properties</exclude>
						</webResource>
					</webResources>
				</configuration>
			</plugin>

			<!-- Read application.properties -->
			<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>properties-maven-plugin</artifactId> 
				<version>1.0.0</version> <executions> <execution> <phase>initialize</phase> 
				<goals> <goal>read-project-properties</goal> </goals> </execution> </executions> 
				<configuration> <files> <file>src/main/resources/application.properties</file> 
				</files> </configuration> </plugin> -->

			<!-- General Maven Execution Plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<!-- NPM Install -->
					<execution>
						<id>exec-npm-install</id>
						<phase>generate-sources</phase>
						<configuration>
							<executable>npm</executable>
							<arguments>
								<argument>install</argument>
							</arguments>
						</configuration>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
					<!-- Protractor Testing for AngularJS -->
					<execution>
						<id>exec-npm-run-protractor</id>
						<phase>test</phase>
						<configuration>
							<skip>true</skip>
							<executable>npm</executable>
							<arguments>
								<argument>run</argument>
								<argument>protractor</argument>
							</arguments>
						</configuration>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
					<!-- Compass Compile --> 
					<execution> 
						<id>exec-compass-compile</id>
						<phase>generate-sources</phase> 
						<configuration> 
							<executable>compass</executable>
							<arguments>
								<argument>compile</argument> 
							</arguments>
						</configuration>
						<goals> 
							<goal>exec</goal>
						</goals>
					</execution>
					<!-- Grunt Deploy <execution> <id>exec-grunt-deploy</id> <phase>generate-sources</phase> 
						<configuration> <executable>grunt</executable> <arguments> <argument>deploy</argument> 
						</arguments> </configuration> <goals> <goal>exec</goal> </goals> </execution> -->
				</executions>
			</plugin>
			<!-- Karma Testing for AngularJS -->
			<plugin>
				<groupId>com.kelveden</groupId>
				<artifactId>maven-karma-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<id>maven-karma-test</id>
						<phase>test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<karmaExecutable>${basedir}/node_modules/.bin/karma</karmaExecutable>
							<configFile>src/main/webapp/WEB-INF/tests/karma.conf.js</configFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Assembly Plugin to generate Release zip file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptor>assembly.xml</descriptor>
					<finalName>${project.name}-${project.version}</finalName>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<versionRange>[1.3.2,)</versionRange>
										<goals>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>application.properties</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<!-- <resources> <resource> <directory>src/main/webapp/</directory> <excludes> 
			<exclude>app/node_modules/**</exclude> </excludes> </resource> </resources> -->

	</build>



</project>
