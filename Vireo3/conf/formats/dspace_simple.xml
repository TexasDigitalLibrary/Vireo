*{ 
   This is the export format for the DSpace Simple Archive Format. Really, this
   is three templates in one: dublin_core.xml, metadata_thesis.xml, 
   metadata_local.xml, and the contents file. They have just been placed in
   this one file to keep things cleaner on the filesystem. For more information
   about the format see the DSpace documentation: 
   
   https://wiki.duraspace.org/display/DSDOC18/Importing+and+Exporting+Items+via+Simple+Archive+Format 
   
   Note: be carefull about white space when editing around the content's file
   section. Since the format is not xml white space does matter.  
}*
#{if "contents".equals(template) }
#{if sub.getPrimaryDocument() != null }
${ sub.getPrimaryDocument().getName() }	bundle:CONTENT	primary:true
#{/if}
#{list items:sub.getAttachmentsByType(org.tdl.vireo.model.AttachmentType.SUPPLEMENTAL,org.tdl.vireo.model.AttachmentType.SOURCE), as:'attachment'}
${ attachment.getName() }	bundle:CONTENT
#{/list}
#{list items:sub.getAttachmentsByType(org.tdl.vireo.model.AttachmentType.LICENSE), as:'attachment'}
${ attachment.getName() }	bundle:LICENSE
#{/list}
#{/if}
#{elseif "dublin_core.xml".equals(template) }
<?xml version="1.0" encoding="utf-8"?>
<dublin_core>

    <!-- dc.creator = Student -->
    <dcvalue element="creator">
        ${ sub.getStudentFormattedName(org.tdl.vireo.model.NameFormat.LAST_FIRST_MIDDLE_BIRTH)?.escapeXml()?.raw() }
    </dcvalue>

    <!-- dc.title = Document Title -->
    #{if sub.getDocumentTitle() != null } 
    <dcvalue element="title">
        ${ sub.getDocumentTitle()?.escapeXml()?.raw() }
    </dcvalue>
    #{/if}
    
    <!-- dc.description.abstract = Document Abstract -->
    #{if sub.getDocumentAbstract() != null } 
    <dcvalue element="description" qualifier="abstract">
        ${ sub.getDocumentAbstract()?.escapeXml()?.raw() }
    </dcvalue>
    #{/if}
    
    <!-- dc.subject = Document Keywords, split on ";" (multiple) -->
    #{if sub.getDocumentKeywords() != null } 
    #{list items:sub.getDocumentKeywords().split(";"), as:'keyword'} 
    <dcvalue element="subject">
        ${ keyword.trim()?.escapeXml()?.raw() }
    </dcvalue>
    #{/list}
    #{/if}

    <!-- dc.contributor.advisor = Committee Memmbers who are flagged as chair (may be multiple) -->
    #{list items:sub.getCommitteeMembers(), as:'member'} 
    #{if member.hasRole("Chair","Co-Chair","Supervisor","Co-Supervisor","Advisor") } 
    <dcvalue element="contributor" qualifier="advisor">
        ${ member.getFormattedName(org.tdl.vireo.model.NameFormat.LAST_FIRST_MIDDLE_BIRTH)?.escapeXml()?.raw() }
    </dcvalue>
    #{/if}
    #{/list}
    
    
    <!-- dc.contributor.committeeMember = Committee Members who are not flagged as chair (likely multiple) -->
    #{list items:sub.getCommitteeMembers(), as:'member'}
    #{if member.hasNoRole() } 
    <dcvalue element="contributor" qualifier="committeeMember">
        ${ member.getFormattedName(org.tdl.vireo.model.NameFormat.LAST_FIRST_MIDDLE_BIRTH)?.escapeXml()?.raw() }$
    </dcvalue>
    #{/if}
    #{/list}
    
    
    <!-- dc.date.created = Graduation date in "YYYY-MM" format -->
    <!-- dc.date.submitted = Graduation date in "month YYYY" format -->
    #{if sub.getGraduationYear() != null } 
    <dcvalue element="date" qualifier="created">
		%{
			out.print(sub.getGraduationYear());
			if (sub.getGraduationMonth() != null) {
			    out.print("-");
			    // Jaunary=0, December=11
			    out.print(String.format("%02d",sub.getGraduationMonth()+1));
			}
		}% 
    </dcvalue>
    <dcvalue element="date" qualifier="submitted">
		%{
			if (sub.getGraduationMonth() != null && sub.getGraduationMonth() >= 0 && sub.getGraduationMonth() <= 11) {
			   String monthName = new java.text.DateFormatSymbols().getMonths()[sub.getGraduationMonth()]; 
			   out.print(monthName+" ");
			}
			out.print(sub.getGraduationYear());
		}% 
    </dcvalue>
    #{/if}
    
    <!-- dc.date.issued = Approval date in "YYYY-MM-DD" format -->
    #{if sub.getApprovalDate() != null } 
    <dcvalue element="date" qualifier="issued">
        ${ sub.getApprovalDate().format("yyyy-MM-dd") }
    </dcvalue>
    #{/if}
    
    
    <!-- dc.format.mimetype = Primary Document's mimetype, almost always "application/pdf" -->
    #{if sub.getPrimaryDocument() != null } 
    <dcvalue element="format" qualifier="mimetype">
        ${ sub.getPrimaryDocument().getMimeType()?.escapeXml()?.raw() }
    </dcvalue>
    #{/if}
    
    <!-- dc.language.iso = Document Language -->
    #{if sub.getDocumentLanguage() != null }
    <dim:field mdschema="dc" element="language" qualifier="iso">${sub.getDocumentLanguage()}</dim:field>
    #{/if}
    
    <!-- dc.type.material = "text" // constant -->
    <dcvalue element="type" qualifier="material">text</dcvalue>
    
    <!-- dc.type = "thesis" // constant -->
    <dcvalue element="type">Thesis</dcvalue>
    
    <!-- dc.identifier.uri == Deposit ID, this would only be available when re-depositing -->
    #{if sub.getDepositId() != null } 
    <dcvalue element="identifier" qualifier="uri">
        ${ sub.getDepositId()?.escapeXml()?.raw() }
    </dcvalue>
    #{/if}
    
    <!-- dc.description.proveance = Embargo Notes -->
       #{if sub.getEmbargoTypeByGuarantor(org.tdl.vireo.model.EmbargoGuarantor.DEFAULT) != null } 
       
       #{if sub.getEmbargoTypeByGuarantor(org.tdl.vireo.model.EmbargoGuarantor.DEFAULT).getDuration() == null } 
       <dcvalue element="description" qualifier="provenance">
           Submission original under an indefinite embargo labeled '${ sub.getEmbargoTypeByGuarantor(org.tdl.vireo.model.EmbargoGuarantor.DEFAULT).getName()?.escapeXml()?.raw() }'. The submission was exported from vireo on ${ new java.util.Date().format("yyyy-MM-dd") } without embargo terms
       </dcvalue>
       #{/if} 
       #{elseif sub.getEmbargoTypeByGuarantor(org.tdl.vireo.model.EmbargoGuarantor.DEFAULT).getDuration() != 0 } 
       %{
           // Calculate the embargo lift date.
           java.util.Calendar cal = java.util.Calendar.getInstance();
           
           if (sub.getGraduationYear() != null) {
               cal.clear();
               cal.set(java.util.Calendar.YEAR, sub.getGraduationYear());
               if (sub.getGraduationMonth() != null)
                   cal.set(java.util.Calendar.MONTH,sub.getGraduationMonth());
           }
           
           cal.add(java.util.Calendar.MONTH, sub.getEmbargoTypeByGuarantor(org.tdl.vireo.model.EmbargoGuarantor.DEFAULT).getDuration());
           java.util.Date liftDate = cal.getTime();
       }% 
       <dcvalue element="description" qualifier="provenance">
           Submission published under a ${sub.getEmbargoTypeByGuarantor(org.tdl.vireo.model.EmbargoGuarantor.DEFAULT).getDuration() } month embargo labeled '${ sub.getEmbargoTypeByGuarantor(org.tdl.vireo.model.EmbargoGuarantor.DEFAULT).getName()?.escapeXml()?.raw() }', the embargo will last until ${ liftDate.format("yyyy-MM-dd") }
       </dcvalue>
       #{/elseif} 
       #{else} 
       <dcvalue element="description" qualifier="provenance">
           Submission originaly under the a zero month embargo labeled '${ sub.getEmbargoTypeByGuarantor(org.tdl.vireo.model.EmbargoGuarantor.DEFAULT).getName()?.escapeXml()?.raw() }'.
       </dcvalue>
       #{/else}

       #{/if} 
    
    
		<!-- dc.description.provenance = License Agreement Date -->
		#{if sub.getLicenseAgreementDate() != null} 
       <dcvalue element="description" qualifier="provenance">
		    The student, ${ sub.getStudentFormattedName(org.tdl.vireo.model.NameFormat.FIRST_LAST)?.escapeXml()?.raw() }, accepted the attached license on ${ sub.getLicenseAgreementDate().format("yyyy-MM-dd 'at' HH:mm") }. 
       </dcvalue>
		#{/if} 
		
		<!-- dc.description.provenance = Submission Date -->
		#{if sub.getSubmissionDate() != null} 
       <dcvalue element="description" qualifier="provenance">
		    The student, ${ sub.getStudentFormattedName(org.tdl.vireo.model.NameFormat.FIRST_LAST)?.escapeXml()?.raw() }, submitted this ${ sub.getDocumentType() == null ? "document" : sub.getDocumentType()?.escapeXml()?.raw() } for approval on ${ sub.getSubmissionDate().format("yyyy-MM-dd 'at' HH:mm") }. 
       </dcvalue>
		#{/if} 
		
		<!-- dc.description.provenance = Committee Approval Date -->
		#{if sub.getCommitteeApprovalDate() != null} 
       <dcvalue element="description" qualifier="provenance">
		    The committee advisor approved this ${ sub.getDocumentType() == null ? "document" : sub.getDocumentType()?.escapeXml()?.raw() } on ${ sub.getCommitteeApprovalDate().format("yyyy-MM-dd 'at' HH:mm") }. 
       </dcvalue>
		#{/if} 
		
		<!-- dc.description.provenance = Committee Embargo Approval Date -->
		#{if sub.getCommitteeEmbargoApprovalDate() != null} 
       <dcvalue element="description" qualifier="provenance">
		    The committee advisor approved the embargo selection for this ${ sub.getDocumentType() == null ? "document" : sub.getDocumentType()?.escapeXml()?.raw() } on ${ sub.getCommitteeEmbargoApprovalDate().format("yyyy-MM-dd 'at' HH:mm") }. 
       </dcvalue>
		#{/if} 
		
		<!-- dc.description.provenance = Approval Date -->
		#{if sub.getApprovalDate() != null} 
       <dcvalue element="description" qualifier="provenance">
		    This ${ sub.getDocumentType() == null ? "document" : sub.getDocumentType()?.escapeXml()?.raw() } was approved for publication on ${ sub.getApprovalDate().format("yyyy-MM-dd 'at' HH:mm") }. 
       </dcvalue>
		#{/if} 
    
     <!-- dc.description.provenance = Statement about when this package was generated. -->
        <dcvalue element="description" qualifier="provenance">
            DSpace METS Submission Ingestion Package generated from Vireo submission #${ sub.getId() } on ${ new java.util.Date().format("yyyy-MM-dd 'at' HH:mm:ss") }
        </dcvalue>  
    
</dublin_core>
#{/elseif}
#{elseif "metadata_thesis.xml".equals(template) }
<?xml version="1.0" encoding="utf-8"?>
<dublin_core schema="thesis">
    <!-- thesis.degree.name == Degree -->
    #{if sub.getDegree() != null } 
    <dcvalue element="degree" qualifier="name">
        ${ sub.getDegree()?.escapeXml()?.raw() }
    </dcvalue>
    #{/if}
    
    <!-- thesis.degree.level = Degree Level (Doctoral, Masters, Undergraduate) -->
    #{if sub.getDegreeLevel() != null } 
    <dcvalue element="degree" qualifier="level">
        ${ sub.getDegreeLevel().name().toLowerCase().capitalizeWords()?.escapeXml()?.raw() }
    </dcvalue>
    #{/if}
    
    <!-- thesis.degree.discipline = Major -->
    #{if sub.getMajor() != null } 
    <dcvalue element="degree" qualifier="discipline">
        ${ sub.getMajor()?.escapeXml()?.raw() }
    </dcvalue>
    #{/if}
    
    <!-- thesis.degree.grantor = Global configuration setting (settings tab - application settings) -->
    #{ if settingRepo.getConfigValue(org.tdl.vireo.constant.AppConfig.GRANTOR) != null } 
    <dcvalue element="degree" qualifier="grantor">
        ${ settingRepo.getConfigValue(org.tdl.vireo.constant.AppConfig.GRANTOR) }
    </dcvalue>
    #{/if}
    
    <!-- thesis.degree.department = Department -->
    #{if sub.getDepartment() != null } 
    <dcvalue element="degree" qualifier="department">
        ${ sub.getDepartment()?.escapeXml()?.raw() }
    </dcvalue>
    #{/if}
    
</dublin_core>
#{/elseif}
#{elseif "metadata_local.xml".equals(template) }
<?xml version="1.0" encoding="utf-8"?>
<dublin_core schema="local">
	<!-- local.embargo.terms and lift-->
	#{if sub.getEmbargoTypeByGuarantor(org.tdl.vireo.model.EmbargoGuarantor.DEFAULT) != null && sub.getEmbargoTypeByGuarantor(org.tdl.vireo.model.EmbargoGuarantor.DEFAULT).getDuration() != null && sub.getEmbargoTypeByGuarantor(org.tdl.vireo.model.EmbargoGuarantor.DEFAULT).getDuration() != 0 } 
	%{
	    // Calculate the embargo lift date.
	    java.util.Calendar cal = java.util.Calendar.getInstance();
	    
	    if (sub.getGraduationYear() != null) {
	        cal.clear();
	        cal.set(java.util.Calendar.YEAR, sub.getGraduationYear());
	        if (sub.getGraduationMonth() != null)
	            cal.set(java.util.Calendar.MONTH,sub.getGraduationMonth());
	    }
	    
	    cal.add(java.util.Calendar.MONTH, sub.getEmbargoTypeByGuarantor(org.tdl.vireo.model.EmbargoGuarantor.DEFAULT).getDuration());
	    java.util.Date liftDate = cal.getTime();
	}% 
	<dcvalue element="embargo" qualifier="terms">
	    ${ liftDate.format("yyyy-MM-dd") }
	</dcvalue>
	<dcvalue element="embargo" qualifier="lift">
	    ${ liftDate.format("yyyy-MM-dd") }
	</dcvalue>
	#{/if} 
</dublin_core>		
#{/elseif}
#{else}
This file, ${template}, is not supported by the DSpace Simple Archive format.
#{/else}
