*{
Filter tab dialog boxes.

This include includes all the various dialog boxes used on the list and log
tabs. Normally they are hidden but when activated they appear on the page.

}*
#{set 'moreScripts'}
<script src="@{'/public/javascripts/vireo-filtertab.js'}" type="text/javascript" charset="${_response_encoding}"></script>
<script type="text/javascript">
jQuery(document).ready(function() {
	
	var retrieveTemplateJSONURL = "@{ViewTab.retrieveTemplateJSON()}";
	
	/**
	 * Retrieve template data event
	 */
	 jQuery(".modal select[name='email_template']").live("change", function(){
		 modal = jQuery(this).closest(".modal");
		 retrieveTemplateHandler(retrieveTemplateJSONURL, jQuery(this).val(), modal);
	 });
	
	/**
	 * Add Comment Disable/Enable Events
	 */
	 jQuery(".emailOptions input[name='visibility']").live("click", toggleAddCommentEmailOptions());
	 jQuery("input[name='primary_recipients_toggle']").on("click", toggleCarbonCopyAdvisor());
     jQuery("input[name='cc_recipients_toggle']").on("click", function() {
        
        var modalsCCRecipientsName = "#" + jQuery(this).attr("data-modal-name") + " .cc_recipients";
        
        jQuery(modalsCCRecipientsName).toggle(300, function() {
            if(jQuery(modalsCCRecipientsName).css("display") == "none") {
                jQuery(modalsCCRecipientsName + " input").val("");
             }
        });
     
     });
	
	// Batch Confirm links
	jQuery('.batchConfirm').click(batchConfirmHandler(${results?.getTotal()}));
	
    /** Hide all the dialog boxes initially **/
    jQuery('#filter-save-modal').modal({
        'show': false
    });
    jQuery('#filter-manage-modal').modal({
        'show': false
    });
    jQuery('#filter-customize-modal').modal({
        'show': false
    });
    jQuery('#customize-search-modal').modal({
        'show': false
    });    
    
    /** Sortable columns **/
    jQuery("#shownColumns, #hiddenColumns").sortable({
        connectWith: ".columnsSortable",
        placeholder: "placeholder",
        update: function(event,ui) {
            var list = jQuery("#shownColumns").sortable('toArray').toString();
            jQuery("#columns-field").val(list);
        }
    }).disableSelection();
    
    var list = jQuery("#shownColumns").sortable('toArray').toString();
    jQuery("#columns-field").val(list);
    
    /** Sortable facets **/
    jQuery("#shownFacets, #hiddenFacets").sortable({
        connectWith: ".facetsSortable",
        placeholder: "placeholder",
        update: function(event,ui) {
            var list = jQuery("#shownFacets").sortable('toArray').toString();
            jQuery("#facets-field").val(list);
        }
    }).disableSelection();
    
    var list = jQuery("#shownFacets").sortable('toArray').toString();
    jQuery("#facets-field").val(list);
    
    // Export modal
    jQuery("#submit_download_export").click(function () {
        jQuery("#batch-export-modal").modal('hide');
        return true;
    });
    var batchExportExtraSelectLabel = "<label class=\"control-label\" for=\"packager-extra\" id=\"packager-extra-label\"><strong>Export Columns</strong>:</label>";
    var batchExportExtraSelectDiv = "<div class=\"controls\" id=\"batch-export-extra-controls\"><select class=\"input-xlarge\" name=\"packager-extra\" id=\"packager-extra\"><option value=\"Active\">Active Filter</option><option value=\"Saved\">Saved Filter</option></select></div>";
    var batchExportSavedFiltersLabel = "<label class=\"control-label\" for=\"packager-extra-saved-filters\" id=\"packager-extra-saved-filters-label\"><strong>Saved Filters</strong>:</label>";
    var batchExportSavedFiltersDiv = 	"<div class=\"controls\" id=\"batch-export-extra-saved-filters-controls\">" +
    									"<select class=\"input-xlarge\" name=\"packager-extra-saved-filters\" id=\"packager-extra-saved-filters\">" +
    									"<optgroup label=\"Without Columns\">" +
    									%{boolean foundWithoutColumns = false;}%
    									#{list items:allFilters, as:'exportingFilter'}
    										#{if !exportingFilter.hasColumns()}
    										%{foundWithoutColumns = true;}%
    										"<option value=\"${exportingFilter.getId()}\">${exportingFilter.getName()}</option>" +
    										#{/if}
    									#{/list}
    									#{if !foundWithoutColumns}
    									"<option disabled=\"disabled\">None...</option>" +
    									#{/if}
    									"</optgroup>" +
    									"<optgroup label=\"With Columns\">" +
    									%{boolean foundWithColumns = false;}%
    									#{list items:allFilters, as:'exportingFilter'}
    										#{if exportingFilter.hasColumns()}
    										%{foundWithColumns = true;}%
    										"<option value=\"${exportingFilter.getId()}\">${exportingFilter.getName()}</option>" +
    										#{/if}
    									#{/list}
    									#{if !foundWithColumns}
    									"<option disabled=\"disabled\">None...</option>" +
    									#{/if}
    									"</optgroup>" +
    									"</select></div>";
    jQuery("#packager").on("change", function() {
    	var selectedOption = $("#packager option:selected").text();
    	if(selectedOption == "Excel Export"){
    		var div = $("#batch-export-control-group");
    		div.append(batchExportExtraSelectLabel);
    		div.append(batchExportExtraSelectDiv);
    		jQuery("#packager-extra").on("change", function() {
    			var selectedOption = $("#packager-extra option:selected").text();
    			if(selectedOption == "Saved Filter"){
    				var div = $("#batch-export-control-group");
		    		div.append(batchExportSavedFiltersLabel);
    				div.append(batchExportSavedFiltersDiv);
    			} else {
    				var div = $("#batch-export-control-group");
    				div.find("#packager-extra-saved-filters-label").remove();
    				div.find("#batch-export-extra-saved-filters-controls").remove();
    			}
    		});
    	} else {
    		var div = $("#batch-export-control-group");
    		div.find("#packager-extra-label").remove();
    		div.find("#batch-export-extra-controls").remove();
    		div.find("#packager-extra-saved-filters-label").remove();
    		div.find("#batch-export-extra-saved-filters-controls").remove();
    	}
    });
    
    // Batch Update Status dialog box
    jQuery("#state").change(function() {
    
        // Toggle the deposit location field display
        if (jQuery("#state option:selected").hasClass("ask-for-depositLocation") && jQuery("#ask-for-depositLocation-group").is(":hidden")) {
            jQuery("#ask-for-depositLocation-group").slideToggle();
        } else if (!jQuery("#state option:selected").hasClass("ask-for-depositLocation") && !jQuery("#ask-for-depositLocation-group").is(":hidden")) {
            jQuery("#ask-for-depositLocation-group").slideToggle();
        }
        
        // Toggle the delete field display
        if (jQuery("#state option:selected").hasClass("ask-for-delete") && jQuery("#ask-for-delete-group").is(":hidden")) {
            jQuery("#ask-for-delete-group input").attr("checked", false);
            jQuery("#ask-for-delete-group").slideToggle();
        } else if (!jQuery("#state option:selected").hasClass("ask-for-delete") && !jQuery("#ask-for-delete-group").is(":hidden")) {
            jQuery("#ask-for-delete-group").slideToggle();
        }
    });
});
</script>
#{/set}


<div class="modal hide fade" id="filter-save-modal">
    <form action="@{FilterTab.ModifyFilters(nav)}" method="POST" class="form-horizontal">
        <input type="hidden" name="action" value="save"/>
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">×</button>
            <h3>Save Filters</h3>
        </div>
        <div class="modal-body">
            <p>Save your currently active filter by assigning it a name. If the name already exists then the filter will be replaced.</p>
            <br/>
            <fieldset>
                <div class="control-group">
                    <label class="control-label" for="name"><strong>Filter Name</strong>:</label>
                    <div class="controls">
                        <input type="text" class="input-xlarge" name="name"/>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="public"><strong>Public</strong>:</label>
                    <div class="controls">
                        <input type="checkbox" name="public" value="true"/>
                        <p class="help-block">I would like this filter to be available to all users.</p>
                    </div>
                    <label class="control-label" for="columns"><strong>Columns</strong>:</label>
                    <div class="controls">
                        <input type="checkbox" name="columns" value="true"/>
                        <p class="help-block">I would like this filter to include visible columns.</p>
                    </div>
                </div>
            </fieldset>
        </div>
        <div class="modal-footer">
            <a href="#" class="btn" data-dismiss="modal">Close</a>
            <input type="submit" class="btn btn-primary" name="submit_save" value="Save Filter"/>
        </div>
    </form>
</div>

<div class="modal hide fade" id="filter-manage-modal">
    <form action="@{FilterTab.ModifyFilters(nav)}" method="POST">
        <input type="hidden" name="action" value="manage"/>
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">×</button>
            <h3>Manage Filters</h3>
        </div>
        <div class="modal-body">
            <p>Use the form to remove any filters which are no longer needed.</p>
            <br/>
            <table class="table table-borderd table-striped">
                <tr>
                    <th>Remove</th>
                    <th>Filter Name</th>
                    <th>Has Columns</th>
                    <th>Status</th>
                </tr>
                #{list items:subRepo.findSearchFiltersByCreatorOrPublic(securityContext.getPerson()), as:'filter'}
                <tr>
                    <td>
                        #{if filter.getCreator() == securityContext.getPerson() || securityContext.getPerson().getRole().ordinal() >= org.tdl.vireo.model.RoleType.MANAGER.ordinal() }
                        <input type="checkbox" name="remove" value="${filter.getId()}"/>
                        #{/if}
                    </td>
                    <td>${filter.getName()}</td>
                    <td>${filter.hasColumns()}</td>
                    <td>
                        #{if filter.getCreator() == securityContext.getPerson() && filter.isPublic() }
                        Your public filter
                        #{/if}
                        #{elseif filter.getCreator() == securityContext.getPerson() && !filter.isPublic() }
                        Your private filter
                        #{/elseif}
                        #{else}
                        ${filter.getCreator().getFormattedName(org.tdl.vireo.model.NameFormat.FIRST_LAST)}'s public filter
                        #{/else}
                    </td>
                </tr>
                #{/list}
                #{else}
                <tr>
                    <td colspan="3" class="center">
                    <p>There currently are no saved filters.</p>
                    </td>
                </tr>
                #{/else}
            </table>
        </div>
        <div class="modal-footer">
            <a href="#" class="btn" data-dismiss="modal">Close</a>
            <input type="submit" class="btn btn-primary" name="submit_remove" value="Remove Filters"/>
        </div>
    </form>
</div>

<div class="modal hide fade" id="filter-customize-modal">
    <form action="@{FilterTab.CustomizeFilters(nav)}" method="POST" class="form-horizontal">
        <input id="facets-field" type="hidden" name="facets" value=""/>
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">×</button>
            <h3>Customize Filters</h3>
        </div>
        <div class="modal-body">
            <p>Please select which search filter options should be displayed by dragging into or out of the list of displayed options.</p>

            <div id="facet-sort" class="row">
                <div class="span3 offset1">        
                    <h4>Displayed Filters</h4>            
                    <ul id="shownFacets" class="facetsSortable">
                        #{list items:facets, as:'facet'}
                        <li id="facet_${facet.getId()}" class="originally-shown">&{nav.toUpperCase()+'_FACET_'+facet.name()}</li>
                        #{/list}
                    </ul>
                </div>
                <div class="span3">
                    <h4>Disabled Filters</h4>
                    <ul id="hiddenFacets" class="facetsSortable">
                        #{list items:org.tdl.vireo.search.SearchFacet.values(), as:'facet'}
                        #{if !facets.contains(facet) }
                        <li id="facet_${facet.getId()}" class="originally-hidden">&{nav.toUpperCase()+'_FACET_'+facet.name()}</li>
                        #{/if}
                        #{/list}
                    </ul>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <a href="#" class="btn" data-dismiss="modal">Close</a>
            <input type="submit" class="btn btn-primary" name="submit_save" value="Save"/>
        </div>
    </form>
</div>



<div class="modal hide fade" id="customize-search-modal">
    <form id="customize-search-form" action="@{FilterTab.customizeSearch(nav)}" method="POST" class="form-horizontal">
        <input id="columns-field" type="hidden" name="columns" value=""/>
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">×</button>
            <h3>Customize Results Table</h3>
        </div>
        <div class="modal-body">
            <p>Please select which columns should be displayed by dragging into or out of the list of displayed columns.</p>

            <div id="column-sort" class="row">
                <div class="span3 offset1">        
                    <h4>Displayed Columns</h4>            
                    <ul id="shownColumns" class="columnsSortable">
                        #{list items:columns, as:'column'}
                        <li id="column_${column.getId()}" class="originally-shown">&{nav.toUpperCase()+'_COLUMN_'+column.name()}</li>
                        #{/list}
                    </ul>
                </div>
                <div class="span3">
                    <h4>Disabled Columns</h4>
                    <ul id="hiddenColumns" class="columnsSortable">
                        #{list items:org.tdl.vireo.search.SearchOrder.values(), as:'column'}
                        #{if !columns.contains(column) }
                        <li id="column_${column.getId()}" class="originally-hidden">&{nav.toUpperCase()+'_COLUMN_'+column.name()}</li>
                        #{/if}
                        #{/list}
                    </ul>
                </div>
            </div>
            <br/>
            <fieldset>
                <div class="control-group">
                    <label class="control-label" for="name"><strong>Results per page</strong>:</label>
                    <div class="controls">
                        <select name="resultsPerPage">
                            <option #{if resultsPerPage == 20}selected="true"#{/if} value="20">20</option>
                            <option #{if resultsPerPage == 40}selected="true"#{/if} value="40">40</option>
                            <option #{if resultsPerPage == 60}selected="true"#{/if} value="60">60</option>
                            <option #{if resultsPerPage == 100}selected="true"#{/if} value="100">100</option>
                            <option #{if resultsPerPage == 200}selected="true"#{/if} value="200">200</option>
                            <option #{if resultsPerPage == 400}selected="true"#{/if} value="400">400</option>
                            <option #{if resultsPerPage == 500}selected="true"#{/if} value="500">500</option>
                            <option #{if resultsPerPage == 1000}selected="true"#{/if} value="1000">1k</option>
                        </select>
                    </div>
                </div>
            </fieldset>
            
        </div>
        <div class="modal-footer">
            <a href="#" class="btn" data-dismiss="modal">Close</a>
            <input type="submit" class="btn btn-primary" name="submit_save" value="Save"/>
            <input type="submit" class="btn btn-primary" name="default_columns" value="Default Columns"/>
        </div>
    </form>
</div>

#{if "list".equals(nav) } 
<div class="modal hide fade" id="batch-transition-modal">
    <form id="batch-transition-form" action="@{FilterTab.batchTransition()}" method="POST" class="form-horizontal">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">×</button>
            <h3>Batch Update Status</h3>
        </div>
        <div class="modal-body">
            <p>This batch operation will modify the status of all the submissions selected by the currently active filter. 
            If the new state is for publishing, then the items will be deposited into a remote repository.</p>
            
            <p>This operation may take quite some time depending on how many submissions are currently selected.</p>
            
            <fieldset>
                <div class="control-group">
                    <label class="control-label" for="state"><strong>New State</strong>:</label>
                    <div class="controls">
                        <select class="input-xlarge" name="state" id="state">
                            #{list items:states, as:'state'}
                                <option value="${state.getBeanName() }" class="${ state.isDepositable() ? "ask-for-depositLocation" : ""} ${ state.isDeletable() ? "ask-for-delete" : ""}">${state.getDisplayName()}</option>
                            #{/list}
                        </select>
                    </div>
                </div>
                <div id="ask-for-depositLocation-group" class="control-group hidden">
                    <label class="control-label red" for="depositLocationId"><strong>Deposit Location</strong>:</label>
                    <div class="controls">
                        <select class="input-xlarge" name="depositLocationId" id="depositLocationId">
                                <option value=""><em>Do not deposit submissions</em></option>
                            #{list items:depositLocations, as:'location'}
                                <option value="${location.getId() }">${location.getName()}</option>
                            #{/list}
                        </select>
                    </div>
                </div>
                <div id="ask-for-delete-group" class="control-group hidden">
                    <label class="control-label red" for="delete"><strong>Delete Submissions</strong>:</label>
                    <div class="controls">
                        <label class="checkbox inline">
                            <input type="checkbox" name="delete-submissions" value="confirm-delete">
                        </label>
                    </div>
                </div>
                
            </fieldset>
        </div>
        <div class="modal-footer">
            <a href="#" class="btn" data-dismiss="modal">Close</a>
            <button type="submit" class="btn btn-primary batchConfirm" name="submit_save">Transition</button>
        </div>
    </form>
</div>
#{/if}

#{if "list".equals(nav) } 
<div class="modal hide fade" id="batch-assign-modal">
    <form id="batch-assign-form" action="@{FilterTab.batchAssign()}" method="POST" class="form-horizontal">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">×</button>
            <h3>Batch Assign</h3>
        </div>
        <div class="modal-body">
            <p>This batch operation will modify the assignee of all the submissions selected by the currently active filter.</p>
            
            <p>This operation may take quite some time depending on how many submissions are currently selected.</p>
            
            <fieldset>
                <div class="control-group">
                    <label class="control-label" for="assignTo"><strong>Assign To</strong>:</label>
                    <div class="controls">
                        <select class="input-xlarge" name="assignTo" id="assignTo">
                            <option value="null">Unassigned</option>
                            #{list items:assignees, as:'person'}                             
					            <option value="${person.getId()}">${person.getFormattedName(org.tdl.vireo.model.NameFormat.FIRST_LAST)}</option>
					        #{/list}
                        </select>
                    </div>
                </div>
            </fieldset>
        </div>
        <div class="modal-footer">
            <a href="#" class="btn" data-dismiss="modal">Close</a>
            <button type="submit" class="btn btn-primary batchConfirm" name="submit_save">Assign</button>
        </div>
    </form>
</div>
#{/if} 

#{if "list".equals(nav) }
<div class="modal hide fade emailOptions" id="batch-comment-modal">
	
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal">×</button>
		<h3>Batch Comment/Email</h3>
	</div>
        
	<div class="modal-body">
		<form id="batch-comment-form" action="@{FilterTab.batchComment()}" method="POST" class="form-horizontal" enctype="multipart/form-data"> 
            <ul class="unstyled">
                <li  class="autocomplete primary_recipients" 
                    #{if currentUser.getPreference("notes_mark_comment_as_private_by_default") == null}
                        #{if currentUser.getPreference("notes_email_student_by_default") != null}
                            style="display=list-item"
                        #{/if}
                        #{else}
                            style="display:none;"
                        #{/else}
                    #{/if}#{else}
                        style="display:none;"
                    #{/else}>
                    To:<br />
                    <input type="text" 
                    name="primary_recipients"
                    autocomplete="off" 
                    class="span8" 
                    data-items="20" 
                    data-provide="typeahead" 
                    data-min-length="0" 
                    data-source="[#{list items:org.tdl.vireo.email.RecipientType.values(), as:'recipientType'}#{if recipientType.name() != "AdminGroup"}&quot;${recipientType}&quot;${recipientType_isLast ? '' : ','}#{/if}#{else}#{list items:settingRepo.findAllAdministrativeGroups() , as: "adminGroup"}&quot;${adminGroup.getName()}&quot;,#{/list}#{/else}#{/list}]" 
                    data-mode="multiple"
                    #{if currentUser.getPreference("notes_email_student_by_default") != null}
                        value="Student"
                    #{/if}
                    placeholder="i.e. Student, College or myEmail@myProvider.com"/>
                    
                </li>
                <li class="autocomplete cc_recipients"
                    #{if currentUser.getPreference("notes_mark_comment_as_private_by_default") == null}
                        #{if currentUser.getPreference("notes_email_student_by_default") != null}
                            #{if currentUser.getPreference("notes_cc_student_advisor_by_default") != null}
                                    style="display:list-item;"
                                #{/if}
                            #{/if}#{else}
                                style="display:none;"
                            #{/else}
                    #{/if}#{else}
                        style="display:none;"
                    #{/else}>
                    CC:<br />
                    <input type="text"
                    name="cc_recipients"
                    autocomplete="off" 
                    class="span8" 
                    data-items="20" 
                    data-provide="typeahead" 
                    data-min-length="0" 
                    data-source="[#{list items:org.tdl.vireo.email.RecipientType.values(), as:'recipientType'}#{if recipientType.name() != "AdminGroup"}&quot;${recipientType}&quot;${recipientType_isLast ? '' : ','}#{/if}#{else}#{list items:settingRepo.findAllAdministrativeGroups() , as: "adminGroup"}&quot;${adminGroup.getName()}&quot;,#{/list}#{/else}#{/list}]"
                    data-mode="multiple"
                    #{if currentUser.getPreference("notes_cc_student_advisor_by_default") != null}
                        value="Advisor"
                    #{/if}
                    placeholder="i.e. Advisor, College or myEmail@myProvider.com"/>
                </li>
            	<li>
            		Subject:<br />
            		<input type="text" name="subject" class="span8" />
            	</li>
            	<li>
            		<textarea class="textarea span8" name="comment" rows="6" placeholder="compose comment here..."></textarea>
            	</li>
            	<li>
		            <select name="email_template">
		            	<option value="" selected="selected">Choose an email template...</option>
		            	#{list items:templates, as:'template'}
		            		<option value="${template.getId()}">${template.getName()}</option>
		            	#{/list}
		            </select>
		        </li>
            	<li>
            		<input type="radio" name="visibility" class="radio" value="public"
            		#{if currentUser.getPreference("notes_mark_comment_as_private_by_default") == null}
            		checked="true"
            		#{/if}
            		> Comment is public</input><br />
            		<ul class="unstyled emailCarbon" style="padding-left:15px;" id="comment-email-options">
            			<li class="cc_recipients_toggle">
                            <input data-modal-name="batch-comment-modal" type="checkbox" name="primary_recipients_toggle" class="checkbox"
                                #{if currentUser.getPreference("notes_mark_comment_as_private_by_default") == null}
                                    #{if currentUser.getPreference("notes_email_student_by_default") != null}
                                        checked="true"
                                    #{/if}
                                #{/if}#{else}
                                    disabled="true"
                                #{/else}
                            > Add Email Recipients </input> <br>
                            <input data-modal-name="batch-comment-modal" type="checkbox" name="cc_recipients_toggle" class="checkbox" 
                                #{if currentUser.getPreference("notes_mark_comment_as_private_by_default") == null}
                                    #{if currentUser.getPreference("notes_email_student_by_default") == null}
                                        disabled="true"
                                    #{/if}
                                    #{if currentUser.getPreference("notes_cc_student_advisor_by_default") != null}
                                        checked="true"
                                    #{/if}
                                #{/if}#{else}
                                    disabled="true"
                                #{/else}> Add CC Recipients </input> 
                        </li>
            		</ul>
            	</li>
            	<li>            	
            		<input type="radio" name="visibility" class="radio" value="private"
            		#{if currentUser.getPreference("notes_mark_comment_as_private_by_default") != null}
            			checked="true"
            		#{/if}
            		> Mark comment as private</input>
            	</li>
            </ul>                   
	</div>
	
	<div class="modal-footer">
			<a href="#" class="btn" data-dismiss="modal">Close</a>
			<button type="submit" class="btn btn-primary batchConfirm" name="submit_save">Submit</button>
		</form>                 
	</div>
    
</div>
#{/if}

#{if "list".equals(nav) } 
<div class="modal hide fade" id="batch-export-modal">
    <form id="batch-export-form" action="@{FilterTab.batchExport()}" method="POST" class="form-horizontal">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">×</button>
            <h3>Batch Export</h3>
        </div>
        <div class="modal-body">
            <p>Download all the submissions selected by the currently active filter. The download will begin 
            immediately, and may take some time to complete. Unfortunately, your browser will not be able to 
            provide an estimate of when the download is complete.</p>
            
            <fieldset>
                <div class="control-group" id="batch-export-control-group">
                    <label class="control-label" for="packager"><strong>Export Format</strong>:</label>
                    <div class="controls">
                        <select class="input-xlarge" name="packager" id="packager">
                            #{list items:packagers, as:'packager'}
                                <option value="${packager.getBeanName() }">${packager.getDisplayName()}</option>
                            #{/list}
                        </select>
                    </div>
                </div>
            </fieldset>
        </div>
        <div class="modal-footer">
            <a href="#" class="btn" data-dismiss="modal">Close</a>
            <input type="submit" class="btn btn-primary" id="submit_download_export" name="submit_save" value="Download Export"/>
        </div>
    </form>
</div>
#{/if} 
