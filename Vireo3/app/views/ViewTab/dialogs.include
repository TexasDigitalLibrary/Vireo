<div class="modal hide fade" id="submission-status-modal">
    
        
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">×</button>
            <h3>Change Submission Status</h3>
        </div>
        <div class="modal-body">          
            <form id="submission-status-form" action="@{ViewTab.changeSubmissionStatus(submission.getId())}" method="POST" class="form-horizontal">
            <div style="padding-bottom:15px;">
            <h3>Current Transitions</h3>
            #{list items:transitions, as:'state'}
            	<a id="${state.getBeanName()}" class="btn special-value
            	#{if state.isDepositable()}
            		 btn-success 
            		 #{if depositLocations.size() > 1}
            		 	ask-for-deposit-location
            		 #{/if}
            	#{/if}
            	">${state.getDisplayName()}</a>
            #{/list}
            </div>
            
            #{if depositLocations.size() > 1}
	            <div id="select-depositLocation" class="control-group error hidden">
	                <p>Multiple deposit locations are defined. Please select a deposit location below where this submission should be sent to. Then try the submission again.</p>
	        		<p><strong>Deposit location:</strong> 
		            <select class="input-xlarge" name="depositLocationId" id="depositLocationId">
		                #{list items:depositLocations, as:'location'}
		                    <option value="${location.getId() }">${location.getName()}</option>
		                #{/list}
		            </select>
		            </p>
	            </div>
            #{/if}
            #{elseif depositLocations.size() == 1}
            	<input type="hidden" name="depositLocationId" value="${depositLocations.get(0).getId()}"/>
            #{/elseif}
            
            <h3>Advanced Options</h3>            
            <select name="submission-status">
            	#{list items:states, as:'state'}
            		<option value="${state.getBeanName()}" 
            			#{if submission.getState()==state}selected="selected"#{/if} 
            			#{if state.isDepositable() && depositLocations.size() > 1} class="ask-for-deposit-location" #{/if}>${state.getDisplayName()}</option>
            	#{/list}            	
            </select>
            <input type="hidden" name="special_value" value="" />
            <input type="submit" id="transition-jump" class="btn btn-primary special-value" name="submit_save" value="Save"/>
            
            <div style="padding-top:15px;">
           		#{if submission.getState().isDeletable()}
           			<a id="deleteState" class="btn btn-danger special-value deleteState">Delete this Submission</a>
           		#{/if}#{else}
           			<a id="cancelState" class="btn btn-important special-value">Cancel this Submission</a>
            	#{/else}
            </div>
            </form>
        </div>
        <div class="modal-footer">
            <a href="#" class="btn" data-dismiss="modal">Close</a>            
        </div>
    
</div>

<div class="modal hide fade" id="assignee-modal">
            
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">×</button>
            <h3>Update Submission</h3>
        </div>
        
        <div class="modal-body">
           <form id="assignee-form" action="@{ViewTab.changeAssignedTo(submission.getId())}" method="POST" class="form-horizontal"> 
           <div style="padding-bottom:15px;">
           	<a id="${currentUser.getId()}" class="btn special-value">Assign to me</a>
           </div>           
            
            <select name="assignee">
            	#{list items:assignees, as:'assignee'}
            		<option value="${assignee.getId()}" #{if submission.getAssignee()==assignee}selected="selected"#{/if}>${assignee.getDisplayName()}</option>
            	#{/list}            	            	
            </select>
           <input type="hidden" name="special_value" value="" />
           <input type="submit" class="btn btn-primary" name="submit_save" value="Save"/>
            <div style="padding-top:15px;">
           <a id="unassign" class="btn special-value">Unassign</a>
           </div>
           </form>
           
        </div>
        <div class="modal-footer">
            <a href="#" class="btn" data-dismiss="modal">Close</a>
            
        </div>
    
</div>

<div class="modal hide fade" id="submission-date-modal">
	<div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">×</button>
        <h3>Change Submission Date</h3>
    </div>
    
    <form id="submission-date-form" action="@{ViewTab.changeSubmissionDate(submission.getId())}" method="POST" class="form-horizontal"> 
    <div class="modal-body">
    		<p>Dates must be formatted as MM/DD/YYYY.</p>
	       <input class="datepickerSubmission" name="submission-date" type="text" value="${submission.getSubmissionDate()?.format('MM/dd/yyyy')}" />       
    </div>
    
    <div class="modal-footer">
        <a href="#" class="btn" data-dismiss="modal">Close</a>
        <input type="submit" class="btn btn-primary" name="submit_save" value="Save"/>
    </div>
    </form>
    
</div>

<div class="modal hide fade emailOptions" id="add-comment-modal">
	
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal">×</button>
		<h3>Add Comment</h3>
	</div>
        
	<div class="modal-body">
		<form id="add-comment-form" action="@{ViewTab.view(submission.getId())}" method="POST" class="form-horizontal" enctype="multipart/form-data"> 
            <ul class="unstyled">
            	<li  class="autocomplete primary_recipients" 
            		#{if currentUser.getPreference("notes_mark_comment_as_private_by_default") == null}
			      		#{if currentUser.getPreference("notes_email_student_by_default") != null}
			      			style="display=list-item"
			      		#{/if}
			      		#{else}
			      			style="display:none;"
			      		#{/else}
			      	#{/if}#{else}
			      		style="display:none;"
			        #{/else}>
            		To:<br />
            		<input type="text" 
            		name="primary_recipients"
                    autocomplete="off" 
            		class="span8" 
            		data-items="20" 
            		data-provide="typeahead" 
            		data-min-length="0" 
                    data-source="[#{list items:org.tdl.vireo.email.RecipientType.values(), as:'recipientType'}#{if recipientType.name() != "AdminGroup"}&quot;${recipientType}&quot;${recipientType_isLast ? '' : ','}#{/if}#{else}#{list items:settingRepo.findAllAdministrativeGroups() , as: "adminGroup"}&quot;${adminGroup.getName()}&quot;,#{/list}#{/else}#{/list}]"            		
                    data-mode="multiple"
            		#{if currentUser.getPreference("notes_email_student_by_default") != null}
		      			value="Student"
		      		#{/if}
		      		placeholder="i.e. Student, College or myEmail@myProvider.com"/>
            		
            	</li>
            	<li class="autocomplete cc_recipients"
            		#{if currentUser.getPreference("notes_mark_comment_as_private_by_default") == null}
						#{if currentUser.getPreference("notes_email_student_by_default") != null}
							#{if currentUser.getPreference("notes_cc_student_advisor_by_default") != null}
									style="display:list-item;"
								#{/if}
							#{/if}#{else}
								style="display:none;"
							#{/else}
					#{/if}#{else}
						style="display:none;"
					#{/else}>
            		CC:<br />
            		<input type="text"
            		name="cc_recipients"
                    autocomplete="off" 
            		class="span8" 
            		data-items="20" 
            		data-provide="typeahead" 
            		data-min-length="0" 
            		data-source="[#{list items:org.tdl.vireo.email.RecipientType.values(), as:'recipientType'}#{if recipientType.name() != "AdminGroup"}&quot;${recipientType}&quot;${recipientType_isLast ? '' : ','}#{/if}#{else}#{list items:settingRepo.findAllAdministrativeGroups() , as: "adminGroup"}&quot;${adminGroup.getName()}&quot;,#{/list}#{/else}#{/list}]"
            		data-mode="multiple"
            		#{if currentUser.getPreference("notes_cc_student_advisor_by_default") != null}
		      			value="Advisor"
		      		#{/if}
		      		placeholder="i.e. Advisor, College or myEmail@myProvider.com"/>
            	</li>
            	<li>
            		Subject:<br />
            		<input type="text" name="subject" class="span8" />
            	</li>
            	<li>
            		<textarea class="textarea span8" name="comment" rows="6" placeholder="compose comment here..."></textarea>
            	</li>
            	<li>
		            <select name="email_template">
		            	<option value="" selected="selected">Choose an email template...</option>
		            	#{list items:templates, as:'template'}
		            		<option value="${template.getId()}">${template.getName()}</option>
		            	#{/list}
		            </select>
		        </li>
		        <li>
		            <input type="checkbox" name="status_change" class="checkbox" 
		            #{if currentUser.getPreference("notes_flag_submission_as_needs_corrections_by_default") != null}
		             checked="true"
		            #{/if}
		            > Flag submission as "Needs Corrections"</input><br />		            
            	</li>
            	<li>
            		<input type="radio" name="visibility" class="radio" value="public"
            		#{if currentUser.getPreference("notes_mark_comment_as_private_by_default") == null}
            		checked="true"
            		#{/if}
            		> Comment is public</input><br />
            		<ul class="unstyled emailCarbon" style="padding-left:15px;" id="comment-email-options">
            			<li class="cc_recipients_toggle">
            				<input data-modal-name="add-comment-modal" type="checkbox" name="primary_recipients_toggle" class="checkbox"
            					#{if currentUser.getPreference("notes_mark_comment_as_private_by_default") == null}
						      		#{if currentUser.getPreference("notes_email_student_by_default") != null}
						      			checked="true"
						      		#{/if}
						      	#{/if}#{else}
						      		disabled="true"
						        #{/else}
            				> Add Email Recipients </input> <br>
            				<input data-modal-name="add-comment-modal" type="checkbox" name="cc_recipients_toggle" class="checkbox" 
            					#{if currentUser.getPreference("notes_mark_comment_as_private_by_default") == null}
									#{if currentUser.getPreference("notes_email_student_by_default") == null}
										disabled="true"
									#{/if}
									#{if currentUser.getPreference("notes_cc_student_advisor_by_default") != null}
										checked="true"
									#{/if}
								#{/if}#{else}
									disabled="true"
								#{/else}> Add CC Recipients </input> 
            			</li>
            		</ul>
            	</li>
            	<li>            	
            		<input type="radio" name="visibility" class="radio" value="private"
            		#{if currentUser.getPreference("notes_mark_comment_as_private_by_default") != null}
            			checked="true"
            		#{/if}
            		> Mark comment as private</input>
            	</li>
            </ul>                   
	</div>
	
	<div class="modal-footer">
			<a href="#" class="btn" data-dismiss="modal">Close</a>
			<input type="submit" class="btn btn-primary" name="addActionLogComment" value="Save"/> 
		</form>                 
	</div>
    
</div>

<div class="modal hide fade" id="add-file-modal">
	
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal">×</button>
		<h3>Add File</h3>
	</div>
        
	<div class="modal-body">
		<form id="add-file-form" action="@{ViewTab.view(submission.getId())}" method="POST" class="form-horizontal" enctype="multipart/form-data">
			<ul class="unstyled">				
				<li><input type="radio" class="radio" name="uploadType" value="primary"> Replace the primary document</input>
					<ul class="unstyled fileContainer" style="padding-left:15px; display:none;">
						<li class="well">
							Choose file: <input type="file" name="primaryAttachment" />
						</li>
					</ul>
				</li>
				<li><input type="radio" class="radio" name="uploadType" value="additional"> Add additional documents</input>
					<ul class="unstyled fileContainer" style="padding-left:15px; display:none;">
						<li class="well">
							<select name="attachmentType" class="input-select" style="margin-bottom:7px;">
								<option value="">choose type...</option>
		                    	#{list items:attachmentTypes, as:"type"}
		                    		#{if !"PRIMARY".equals(type)}
		                    			<option value="${type}">${type}</option>
		                    		#{/if}
		                    	#{/list}
							</select><br />
							Choose file: <input type="file" name="additionalAttachment" />
						</li>
					</ul>
				</li>				
				<li class="emailCarbon">
					<ul class="unstyled" style="padding-left:15px;">
						<li class="cc_recipients_toggle">
                            <input data-modal-name="add-file-modal" type="checkbox" name="primary_recipients_toggle" class="checkbox"
	                          #{if currentUser.getPreference("notes_mark_comment_as_private_by_default") == null}
	                                      #{if currentUser.getPreference("notes_email_student_by_default") != null}
	                                            checked="true"
	                                      #{/if}
	                                #{/if}#{else}
	                                      disabled="true"
	                            #{/else}> Add Email Recipients </input> <br>
                            <input data-modal-name="add-file-modal" type="checkbox" name="cc_recipients_toggle" class="checkbox" 
                                  #{if currentUser.getPreference("notes_mark_comment_as_private_by_default") == null}
                                  #{if currentUser.getPreference("notes_email_student_by_default") == null}
                                        disabled="true"
                                  #{/if}
                                  #{if currentUser.getPreference("notes_cc_student_advisor_by_default") != null}
                                        checked="true"
                                  #{/if}
                            #{/if}#{else}
                                  disabled="true"
                            #{/else}> Add CC Recipients </input> 
                      </li>
					</ul>
					<div id="add-file-email-options" #{if currentUser.getPreference("attachment_email_student_by_default") == null}style="display:none;"#{/if}>
					<ul class="unstyled">
		            	<li class="autocomplete primary_recipients" 
	                        #{if currentUser.getPreference("notes_mark_comment_as_private_by_default") == null}
                                #{if currentUser.getPreference("notes_email_student_by_default") != null}
                                      style="display=list-item"
                                #{/if}
                                #{else}
                                      style="display:none;"
                                #{/else}
                          #{/if}#{else}
                                style="display:none;"
                          #{/else}>
	                        To:<br />
	                        <input type="text" 
	                        name="primary_recipients"
                            autocomplete="off" 
	                        class="span8" 
	                        data-items="20" 
	                        data-provide="typeahead" 
	                        data-min-length="0" 
	                        data-source="[#{list items:org.tdl.vireo.email.RecipientType.values(), as:'recipientType'}#{if recipientType.name() != "AdminGroup"}&quot;${recipientType}&quot;${recipientType_isLast ? '' : ','}#{/if}#{else}#{list items:settingRepo.findAllAdministrativeGroups() , as: "adminGroup"}&quot;${adminGroup.getName()}&quot;,#{/list}#{/else}#{/list}]" 
	                        data-mode="multiple"
	                        #{if currentUser.getPreference("notes_email_student_by_default") != null}
	                                    value="Student"
	                              #{/if}
	                              placeholder="i.e. Student, College or myEmail@myProvider.com"/>
	                        
	                  </li>
	                  <li class="autocomplete cc_recipients"
	                        #{if currentUser.getPreference("notes_mark_comment_as_private_by_default") == null}
	                                    #{if currentUser.getPreference("notes_email_student_by_default") != null}
	                                          #{if currentUser.getPreference("notes_cc_student_advisor_by_default") != null}
	                                                      style="display:list-item;"
	                                                #{/if}
	                                          #{/if}#{else}
	                                                style="display:none;"
	                                          #{/else}
	                              #{/if}#{else}
	                                    style="display:none;"
	                              #{/else}>
	                        CC:<br />
	                        <input type="text"
	                        name="cc_recipients" 
                            autocomplete="off"
	                        class="span8" 
	                        data-items="20" 
	                        data-provide="typeahead" 
	                        data-min-length="0" 
	                        data-source="[#{list items:org.tdl.vireo.email.RecipientType.values(), as:'recipientType'}#{if recipientType.name() != "AdminGroup"}&quot;${recipientType}&quot;${recipientType_isLast ? '' : ','}#{/if}#{else}#{list items:settingRepo.findAllAdministrativeGroups() , as: "adminGroup"}&quot;${adminGroup.getName()}&quot;,#{/list}#{/else}#{/list}]" 
	                        data-mode="multiple"
	                        #{if currentUser.getPreference("notes_cc_student_advisor_by_default") != null}
	                                    value="Advisor"
	                              #{/if}
	                              placeholder="i.e. Advisor, College or myEmail@myProvider.com"/>
	                  </li>
		            	<li>
		            		Subject:<br />
		            		<input type="text" name="subject" class="span8" />
		            	</li>
		            	<li>
		            		<textarea class="textarea span8" name="comment" rows="6" placeholder="compose comment here..."></textarea>
		            	</li>
		            	<li>
				            <select name="email_template">
				            	<option value="" selected="selected">Choose an email template...</option>
				            	#{list items:templates, as:'template'}
				            		<option value="${template.getId()}">${template.getName()}</option>
				            	#{/list}
				            </select>
				        </li>
					</ul>
					</div>
				</li>
				<li><input type="checkbox" class="checkbox" name="status_change" value="true"
				#{if currentUser.getPreference("attachment_flag_submission_as_needs_corrections_by_default") != null}
		         checked="true"
		        #{/if}
				> Flag submission as Needs Corrections</input></li>
			</ul>
	</div>
	
	<div class="modal-footer">
			<a href="#" class="btn" data-dismiss="modal">Close</a>
			<input type="submit" class="btn btn-primary" name="addFile" value="Submit"/> 
		</form>                 
	</div>
    
</div>

#{list items:attachments, as:'attachment'}
<div class="modal hide fade" id="edit-file${attachment.getId()}-modal">
	
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal">×</button>
		<h3>Editing ${attachment.getName()}</h3> (${attachment.getMimeType()})
	</div>
        
	<div class="modal-body">
		<form id="add-file-form" action="@{ViewTab.view(submission.getId())}" method="POST" class="form-horizontal" enctype="multipart/form-data">
			<input type="hidden" name="attachmentId" value="${attachment.getId()}" />
			#{if !attachment.getType().toString().equals("PRIMARY")}
			<ul class="unstyled">
				<li>
					<p>New File Name:</p>
					<input type="text" name="fileName" value="${attachment.getName()}" />
				</li>
				<li><p>New Attachment Type:</p>
					<select name="attachmentType">
					#{list items:attachmentTypes, as:'type'}
						#{if !type.toString().equals("PRIMARY")}
						<option value="${type}"
						#{if type.toString().equals(attachment.getType().toString())}
						selected="selected"
						#{/if}
						>${type}</option>
						#{/if}
					#{/list}
					</select>
				</li>
			</ul>
			#{/if}
			#{else}
			<p>Primary documents can only be deleted.</p>
			#{/else}
	</div>
	
	<div class="modal-footer">
			<button type="submit" class="btn btn-danger confirm" name="deleteFile" style="float:left">Delete</button>			
			<a href="#" class="btn" data-dismiss="modal">Close</a>
			#{if !attachment.getType().toString().equals("PRIMARY")}
			<input type="submit" class="btn btn-primary" name="editFile" value="Submit"/>
			#{/if}
		</form>                 
	</div>
    
</div>
#{/list}